services:
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: proxy
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - firewall-network
    depends_on:
      - ratelimiter
      - cacher

  ratelimiter:
    build:
      context: ./ratelimiter
      dockerfile: Dockerfile
    container_name: ratelimiter
    ports:
      - "8081:8081"
    env_file:
      - .env
    networks:
      - firewall-network
    depends_on:
      - redis-limiter

  redis-limiter:
    image: redis:7-alpine
    container_name: redis-limiter
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - firewall-network
    volumes:
      - redis_limiter_data:/data

  cacher:
    build:
      context: ./cacher
      dockerfile: Dockerfile
    container_name: cacher
    ports:
      - "8082:8082"
    env_file:
      - .env
    networks:
      - firewall-network
    depends_on:
      - redis-cacher

  redis-cacher:
    image: redis:7-alpine
    container_name: redis-cacher
    restart: unless-stopped
    ports:
      - "6380:6379"
    networks:
      - firewall-network
    volumes:
      - redis_cacher_data:/data

  server1:
    image: kennethreitz/httpbin
    container_name: server1
    ports:
      - "9001:80"
    networks:
      - firewall-network

  server2:
    image: kennethreitz/httpbin
    container_name: server2
    ports:
      - "9002:80"
    networks:
      - firewall-network

  server3:
    image: kennethreitz/httpbin
    container_name: server3
    ports:
      - "9003:80"
    networks:
      - firewall-network
  
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth
    ports:
      - "8083:8083"
    env_file:
      - .env
    networks:
      - firewall-network
    depends_on:
      - postgres-auth

  postgres-auth:
    image: postgres:15-alpine
    container_name: postgres-auth
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: postgres-auth
    ports:
      - "5432:5432"
    networks:
      - firewall-network
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data

networks:
  firewall-network:
    driver: bridge

volumes:
  redis_limiter_data:
  redis_cacher_data:
  postgres_auth_data:
